{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Arial-BoldMT;\f1\fswiss\fcharset0 ArialMT;\f2\fswiss\fcharset0 Arial-ItalicMT;
}
{\colortbl;\red255\green255\blue255;\red27\green31\blue35;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c14118\c16078\c18431;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww24920\viewh17860\viewkind0
\deftab720
\pard\pardeftab720\sa320\partightenfactor0

\f0\b\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Wizeline Onboarding Challenge
\f1\b0 \
##The following details are related to the 
\f0\b FRONTEND
\f1\b0  and 
\f0\b BACKEND
\f1\b0  Automation of the Todoist application. \
Tools used for automation\
	\'95	Visual Code\
	\'95	TestCafe\
	\'95	Postman\
	\'95	Newman\
Pre-requisites\
	\'95	Npm\
	\'95	Node js\
	\'95	Browserstack\

\f2\i note: Tests for frontend and backend use JavaScript
\f1\i0 \
##Automation environment set up\
First, Install Home-brew:\
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\
Next, install Node.js in the system, this includes the node package manager known as npm:\
brew install node\
To install Test Cafe, execute the following command:\
npm install - g testcafe\
To install Browserstack execute command at visual code:\
npm install testcafe-browser-provider-browserstack\
Create two environment variables:\
export BROWSERSTACK_USERNAME="<BrowserStack Automate username>"\
export BROWSERSTACK_ACCESS_KEY="<BrowserStack Automate access key>"\
##Execute the tests, the following tests will be executed at chrome as this has been specified in the package.json:\
To execute all the tests:\
npm run all tests\
To execute specific test:\
npm run logintest\
npm run createtasktest\
To execute the test in Headless mode:\
npm run logintestH\
npm run createtasktestH\
To execute using Browserstack:\
First, get the list of available operating system and version by using this command:\
npx testcafe -b browserstack\
Now, execute the test in the desired environment(e.g.):\
npx testcafe "browserstack:chrome@102.0:OS X Big Sur" "./pom/tests/Login.test.js"\
npx testcafe "browserstack:chrome@102.0:OS X Big Sur" "./pom/tests/Createtasks.test.js"\
\
##The following instructions are related to the BACKEND Automation of the Todoist application (API)\
First, install postman from:\
https://postman.com/downloads\
For Newman, validate you have npm and node installed and then run the following command:\
npm install -g newman\
Finally install Jenkins, follow the instructions found at: \
https://jenkins.io/download for MacOS\
https://jenkins.io/doc/book/installing/#windows\
Download the Postman collection and environment to your Documents folder and execute this command from visual code:\
newman run Martha_Onboarding_Challenge.postman_collection.json -e ProjectList.postman_environment.json\
At the end of execution a result log is displayed in the Terminal letting you know what tests passed or failed.\
}